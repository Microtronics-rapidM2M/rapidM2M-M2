//===========
//Wireless Thermometer
//===========

//===
//=== Basic Configuration
//===
<table>
    // Configuration block 0 should be used
    name  = config0                         
    // Title of the config. section displayed on the server
    title = Basic configuration               

    //=== Configuration Parameter: Record Interval
    <field>
        // Parameter 0 should be used for the record interval
        name       = field0             
        // Alternative field name that can be used by the REST-API
        alias      = RecordInterval     
        // Title of the parameter displayed on the server
        title      = Record Interval    
        // Position in config block 0 where the parameter is saved
        byteofs    = 0                  
        // No decimal places
        decpl      = 0                  
        // Data type: 32Bit unsigned
        type       = u32 
        // Unit to be used to enter the value for the parameter               
        units      = sec  
        // Lowest valid value for the parameter            
        min        = 10                  
        //Default value is 60 sec.
        default    = 60                      
    </field>
	
    //=== Configuration Parameter: Transmission Interval
    <field>
        name       = field1            
        alias      = TransmissionInterval
        title      = Transmission Interval
        byteofs    = 4                  
        decpl      = 0
        type       = u32
        units      = min
        min        = 10
        default    = 60
        // Conversion factor sec.->min. (sec. used internally)                 
        vscale     = 0.01666666667      
    </field>
	
    //=== Configuration Parameter: Transmission Mode 
    <field>
        name       = field2             
        alias      = TransmissionMode
        title      = Transmission Mode
        byteofs    = 8                  
        decpl      = 0
        type       = u8
        default    = 0
        // Selection options for the drop-down list
        editmask   = 0=Interval;1=Wakeup;2=Online 
    </field>
</table>

//===
//=== Temperature configuration
//===
<table>
    // Configuration block 1 should be used
    name  = config1                         
    // Title of the config. section displayed on the server
    title = Temperature configuration

    //=== Configuration Parameter: Alarm Threshold High
    <field>
        name       = field0             
        alias      = AlarmThresholdHigh     
        title      = Alarm Threshold High   
        byteofs    = 0                  
        decpl      = 2                  
        type       = s16             
        units      = °C          
        // Conversion factor i.e. 2025 -> 20.25 (0.01° is used internally)					
        vscale     = 0.01 
        default    = NAN			
    </field>	

	
    //=== Configuration Parameter: Warning Threshold High
    <field>
        name       = field1             
        alias      = WarningThresholdHigh     
        title      = Warning Threshold High   
        byteofs    = 2                  
        decpl      = 2                  
        type       = s16             
        units      = °C         	
        vscale     = 0.01
	default    = 	NAN	
    </field>
		
    //=== Configuration Parameter: Warning Threshold Low
    <field>
        name       = field2             
        alias      = WarningThresholdLow     
        title      = Warning Threshold Low
        byteofs    = 4                  
        decpl      = 2                  
        type       = s16             
        units      = °C          	
        vscale     = 0.01
	    default    = NAN	
    </field>	

    //=== Configuration Parameter:  Alarm Threshold Low
    <field>
        name       = field3             
        alias      = AlarmThresholdLow    
        title      = Alarm Threshold Low   
        byteofs    = 6                  
        decpl      = 2                  
        type       = s16             
        units      = °C          				
        vscale     = 0.01 
	    default    = NAN			
    </field>		
  
</table>


//===
//=== Measurement Channels
//===
<split>
    // Raw data channel (always "rm2mraw" for the base partner board) from which the data records should be
    //copied
    source = rm2mraw
    // Measurement data channel to which the data record should be copied
    target = histdata0
    // If the first byte of the data record corresponds to this value, it is copied to the specified 
    // measurement data channel.
    key    = 00
</split>

<table>
    // Measurement data channel 0 should be used.
    name = histdata0

    //=== Measurement Channel: Battery Voltage  
    <field>
        // Data field 0 should be used for the battery voltage.
        name    = ch0
        // Alternative field name that can be used by the REST-API
        alias   = VoltageBattery
        // Title of the data field displayed on the server
        title   = Battery Voltage
        //Position im Messdatenkanal 0, an der das Datenfeld gespeichert ist
        //Hinweis: An Position "0" befindet sich der "key" für den Split-Tag 
        byteofs = 1
        //Der Messwert soll auf 2 Kommastellen gerundet werden.
        decpl   = 2
        // Data type: 16Bit signed
        type    = s16
        // Conversion factor mV->V (V is used internally)
        vscale  = 0.001
        // Measurement value unit displayed on the server
        units   = V
    </field>

    //=== Measurement Channel: Input Voltage	
    <field>
        name    = ch1
        alias   = VoltageInput
        title   = Input Voltage
        byteofs = 3
        decpl   = 2
        type    = s16
        vscale  = 0.001
        units   = V
    </field>

    //=== Measurement Channel: Temperature
    <field>
        name    = ch2
        alias   = Temperature
        title   = Temperature
        byteofs = 5
        decpl   = 2
        type    = s16
        vscale  = 0.01
        units   = °C
    </field>

    //=== Measurement Channel: Humidity
    <field>
        name    = ch3
        alias   = Humidity
        title   = Humidity
        byteofs = 7
        decpl   = 1
        type    = s16		
        vscale  = 0.1 
        units   = %
    </field>
    
    //=== Measurement Channel: GSM Level	
    <field>	
        name    = ch4
        alias   = GSMLevel
        title   = GSM Level
        byteofs = 9
        decpl   = 0
        type    = s8
        units   = dBm
    </field>     
</table>


 
//===
//=== Alarm
//===
<split>
    // Raw data channel (always "rm2mraw" for the base partner board) from which the data records should be
    //copied
    source = rm2mraw
	// Has to be "alarm0". Alarm data channel to which the data record should be copied
    target = alarm0
	// Has to be 0x20. If the first byte of the data record corresponds to this value, it is copied to the
    // alarm data channel.
    key    = 20
</split>

// Note: Use the function "Al_SetAlarm()" included in "Alarm.inc" to generate an alarm data record. Since the
//       structure of the alarm data record is implemented in the system, it does not have to be defined  
//       explicitly at this point. 
	